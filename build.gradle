plugins {
	id 'maven-publish'
	id 'org.quiltmc.loom' version '0.12.38'
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group
sourceCompatibility = 1.17 // java 17
targetCompatibility = 1.17

repositories {
	maven {
		name = "Ladysnake"
		url = "https://maven.ladysnake.org/releases"
	}
	maven { url 'https://masa.dy.fi/maven' }
	maven { url 'https://maven.terraformersmc.com' }
	maven { url = "https://jitpack.io" }
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content { includeGroup "maven.modrinth" }
	}
}

// All the default dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${project.minecraft_version}+build.${project.quilt_mappings}:v2"))
	}
	modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"
	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${project.quilted_fabric_api_version}-${project.minecraft_version}"
	modImplementation include("io.github.ladysnake:satin:${project.satin_version}")
	modImplementation include("maven.modrinth:midnightlib:$midnightlib_version")
	modCompileOnly ("dev.emi:emi-fabric:${project.emi_version}")
	modRuntimeOnly ("dev.emi:emi-fabric:${project.emi_version}")

	//ease of multiplayer testing & game control
	modRuntimeOnly "carpet:fabric-carpet:${project.minecraft_version}-${project.carpet_core_version}"

}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with developement.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}
loom {
	accessWidenerPath = file("src/main/resources/lodestone.accesswidener")
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
wrapper {
	gradleVersion = "7.3.3"
	distributionType = Wrapper.DistributionType.ALL
}
